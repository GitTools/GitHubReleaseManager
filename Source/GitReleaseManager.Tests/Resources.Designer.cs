//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitReleaseManager.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitReleaseManager.Tests.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create:
        ///  include-footer: false
        ///  footer-heading:
        ///  footer-content:
        ///  footer-includes-milestone: false
        ///  milestone-replace-text:
        ///  
        ///export:
        ///  include-created-date-in-title: false
        ///  created-date-string-format:
        ///  perform-regex-removal: false
        ///  regex-text:
        ///  multiline-regex: false
        ///  
        ///issue-labels-include:
        ///- Bug
        ///- Feature
        ///- Improvement
        ///
        ///issue-labels-exclude:
        ///- Internal Refactoring
        ///
        ///issue-labels-alias:
        ///    - name:    Bug
        ///      header:  Foo
        ///      plural:  Bar
        ///
        ///    - name:    Improvement [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Default_Configuration_Yaml {
            get {
                return ResourceManager.GetString("Default_Configuration_Yaml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to create:
        ///  include-footer: false
        ///  footer-heading:
        ///  footer-content:
        ///  footer-includes-milestone: false
        ///  milestone-replace-text:
        ///  
        ///export:
        ///  include-created-date-in-title: false
        ///  created-date-string-format:
        ///  perform-regex-removal: false
        ///  regex-text:
        ///  multiline-regex: false
        ///  
        ///issue-labels-include:
        ///- Bug
        ///- Feature
        ///- Improvement
        ///
        ///issue-labels-exclude:
        ///- Internal Refactoring
        ///
        ///issue-labels-alias:
        ///    - name:    Bug
        ///      header:  Foo
        ///      plural:  Bar
        ///
        ///    - name:    Improvement [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Many_Labels_For_Issue_Configuration_Yaml {
            get {
                return ResourceManager.GetString("Many_Labels_For_Issue_Configuration_Yaml", resourceCulture);
            }
        }
    }
}
